name: 'Infra deploy'

on:
  push:
    branches:
      - "main"
  pull_request:
  workflow_dispatch:
    inputs:
      terraform-destroy:
        description: 'Infra deploy (yes/no)'
        required: true
        default: 'no'

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: 
      - terraform-apply
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.terraform-destroy == 'yes'
    
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Terraform Init
      id: init
      run: terraform init -reconfigure
      working-directory: ./

  terraform-apply:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Terraform Apply
      id: plan
      run: terraform plan -out tfapply  -lock=false
      working-directory: ./

  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    needs: 
      - terraform-apply
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.terraform-destroy == 'yes'
    defaults:
      run:
        shell: bash

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ./

    - name: Terraform Destroy
      id: destroy
      run: terraform destroy --auto-approve tfapply
      working-directory: ./
                  