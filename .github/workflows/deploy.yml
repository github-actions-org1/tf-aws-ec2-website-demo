name: 'Terraform Apply'

on:
  push:
    branches:
      - "main"
  pull_request:
  workflow_dispatch:
    inputs:
      terraform-destroy:
        description: 'Destroy EC2 Instances (yes/no)'
        required: true
        default: 'no'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
  AWS_DEFAUT_REGION: ${{ secrets.aws_default_region }}
  AWS_KEY_PAIR: ${{ secret.ssh_key_pair }}
  AWS_PRIVATE_PAIR: ${{ secret.ssh_private_pair }}

jobs:
  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    environment: development

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    # - name: Configure AWS Credentials
      #uses: aws-actions/configure-aws-credentials@v1
      #with:
        #aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #aws-region: us-east-2

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      env:
        TF_ACTION_WORKING_DIR: .
      continue-on-error: true

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan  -lock-false -no-color
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -lock=false

  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    environment: development
    needs: 
      - terraform-apply
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.terraform-destroy == 'yes'
    steps: 
    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      env:
        TF_ACTION_WORKING_DIR: .
      continue-on-error: true

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Destroy
      id: destroy
      run: terraform destroy --auto-approve -lock=false -no-color 
      continue-on-error: true