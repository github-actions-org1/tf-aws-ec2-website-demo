name: 'Terraform EC2 Build Demo'

on:
  push:
    branches:
      - "main"
  pull_request:
  workflow_dispatch:
    inputs:
      terraform_operation:
        description: "Terraform operation: plan, apply, destroy"
        required: true
        default: "plan"
        type: choice
        options:
          - plan
          - apply
          - destroy
                  
jobs:
  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Terraform init
      run: terraform init

    - name: Terraform plan
      run: terraform plan
      if: "${{ github.event.inputs.terraform_operation == 'plan' }}"

    - name: Terraform apply
      run: terraform apply --auto-approve
      if: "${{ github.event.inputs.terraform_operation == 'apply' }}"

    - name: Terraform destroy
      run: terraform destroy --auto-approve
      if: "${{ github.event.inputs.terraform_operation == 'destroy' }}"

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      env:
        TF_ACTION_WORKING_DIR: .
      continue-on-error: true

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -lock=false

  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    environment: development
    needs: 
      - terraform-apply
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.terraform-destroy == 'yes'
    steps: 
    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      env:
        TF_ACTION_WORKING_DIR: .
      continue-on-error: true

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Destroy
      id: destroy
      if: "${{ github.event.inputs.terraform_operation == 'destroy' }}"
      run: terraform destroy -auto-approve